(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{399:function(e,t,s){"use strict";s.r(t);var r=s(3),a=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"es8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es8"}},[e._v("#")]),e._v(" ES8")]),e._v(" "),t("h2",{attrs:{id:"对象方法的扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象方法的扩展"}},[e._v("#")]),e._v(" 对象方法的扩展")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Object.keys")]),e._v("：方法返回一个数组，返回对象的属性，只返回对象自身的可遍历属性的全部属性名。\n"),t("ul",[t("li",[t("code",[e._v("Object.getOwnPropertyNames")]),e._v("方法返回一个数组，成员是参数对象自身的全部属性的属性名，不管该属性是否可遍历。")])])]),e._v(" "),t("li",[t("code",[e._v("Object.values")]),e._v("：返回对象的值")]),e._v(" "),t("li",[t("code",[e._v("Object.entries")]),e._v("：返回对象的键值（数组），可以结合map使用，把一个对象转化为一个二维数组\n"),t("ul",[t("li",[t("code",[e._v("const m = new Map(Object.entries(school))")])])])]),e._v(" "),t("li",[e._v("对象属性的描述对象\n"),t("ul",[t("li",[t("code",[e._v("Object.getOwnPropertyDescriptors")]),e._v("(变量名)")])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);